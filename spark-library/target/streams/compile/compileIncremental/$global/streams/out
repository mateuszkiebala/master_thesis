[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/sliding_aggregation/AvgSlidingSMAO.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/group_by/GroupByObject.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/prefix/SumPrefixSMAO.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/sliding_aggregation/SumSlidingSMAO.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/group_by/IntKey.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/sliding_aggregation/SlidingSMAO.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/group_by/GroupByKey.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/sliding_aggregation/MinSlidingSMAO.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/StatisticsMinimalAlgorithm.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/prefix/PrefixSMAO.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/ranking/RankingMAO.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/statistics_aggregators/Helpers.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/statistics_aggregators/AvgAggregator.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/statistics_aggregators/SumAggregator.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/group_by/ExampleGroupBy.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/statistics_aggregators/MaxAggregator.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/MinimalAlgorithmObject.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/prefix/MinPrefixSMAO.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/prefix/MaxPrefixSMAO.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/sliding_aggregation/MaxSlidingSMAO.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/statistics_aggregators/MinAggregator.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/StatisticsMinimalAlgorithmObject.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/Utils.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/statistics_aggregators/AvgAggregator.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/statistics_aggregators/MinAggregator.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/ranking/RankingObject.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/statistics_aggregators/MaxAggregator.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/statistics_aggregators/SumAggregator.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/statistics_aggregators/StatisticsUtils.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/semi_join/MinimalSemiJoin.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/group_by/ExampleGroupBy.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/RangeTree.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/semi_join/SemiJoinObject.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/statistics_aggregators/StatisticsAggregator.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/semi_join/SemiJoinType.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/prefix/ExamplePrefix.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/MinimalAlgorithm.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/ranking/ExampleRanking.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/semi_join/ExampleSemiJoin.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/group_by/MinimalGroupBy.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/ranking/ExampleRankingUsingPrefixSum.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/sliding_aggregation/ExampleSlidingAggregation.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/sliding_aggregation/MinimalSlidingAggregation.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(minimal_algorithms.MinimalAlgorithmObject, minimal_algorithms.statistics_aggregators.MaxAggregator, minimal_algorithms.examples.prefix.MinPrefixSMAO, minimal_algorithms.semi_join.SemiJoinObject, minimal_algorithms.group_by.ExampleGroupBy, minimal_algorithms.sliding_aggregation.MinimalSlidingAggregation, minimal_algorithms.MinimalAlgorithm, minimal_algorithms.examples.group_by.IntKey, minimal_algorithms.statistics_aggregators.Helpers, minimal_algorithms.examples.sliding_aggregation.SlidingSMAO, minimal_algorithms.group_by.MinimalGroupBy, minimal_algorithms.examples.sliding_aggregation.ExampleSlidingAggregation, minimal_algorithms.group_by.GroupByObject, minimal_algorithms.examples.prefix.PrefixSMAO, minimal_algorithms.examples.ranking.ExampleRanking, minimal_algorithms.MinimalSemiJoin, minimal_algorithms.StatisticsMinimalAlgorithm, minimal_algorithms.examples.semi_join.SemiJoinType, minimal_algorithms.statistics_aggregators.SumAggregator, minimal_algorithms.examples.semi_join.ExampleSemiJoin, minimal_algorithms.examples.sliding_aggregation.MinSlidingSMAO, minimal_algorithms.examples.ranking.RankingMAO, minimal_algorithms.StatisticsMinimalAlgorithmObject, minimal_algorithms.statistics_aggregators.StatisticsAggregator, minimal_algorithms.examples.sliding_aggregation.AvgSlidingSMAO, minimal_algorithms.group_by.MAOPair, minimal_algorithms.examples.prefix.MaxPrefixSMAO, minimal_algorithms.examples.sliding_aggregation.MaxSlidingSMAO, minimal_algorithms.MinimalAlgorithm.KeyPartitioner, minimal_algorithms.statistics_aggregators.AvgAggregator, minimal_algorithms.examples.prefix.SumPrefixSMAO, minimal_algorithms.examples.ranking.ExampleRankingUsingPrefixSum, minimal_algorithms.examples.ranking.RankAsPrefixSMAO, minimal_algorithms.group_by.GroupByKey, minimal_algorithms.semi_join.SemiJoinSetTypeEnum, minimal_algorithms.examples.sliding_aggregation.SumSlidingSMAO, minimal_algorithms.statistics_aggregators.MinAggregator, minimal_algorithms.RangeTree, minimal_algorithms.examples.prefix.ExamplePrefix, minimal_algorithms.MinimalAlgorithm.PerfectPartitioner)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(minimal_algorithms.MinimalAlgorithmObject, minimal_algorithms.statistics_aggregators.MaxAggregator, minimal_algorithms.examples.prefix.MinPrefixSMAO, minimal_algorithms.semi_join.SemiJoinObject, minimal_algorithms.group_by.ExampleGroupBy, minimal_algorithms.sliding_aggregation.MinimalSlidingAggregation, minimal_algorithms.MinimalAlgorithm, minimal_algorithms.examples.group_by.IntKey, minimal_algorithms.statistics_aggregators.Helpers, minimal_algorithms.examples.sliding_aggregation.SlidingSMAO, minimal_algorithms.group_by.MinimalGroupBy, minimal_algorithms.examples.sliding_aggregation.ExampleSlidingAggregation, minimal_algorithms.group_by.GroupByObject, minimal_algorithms.examples.prefix.PrefixSMAO, minimal_algorithms.examples.ranking.ExampleRanking, minimal_algorithms.MinimalSemiJoin, minimal_algorithms.StatisticsMinimalAlgorithm, minimal_algorithms.examples.semi_join.SemiJoinType, minimal_algorithms.statistics_aggregators.SumAggregator, minimal_algorithms.examples.semi_join.ExampleSemiJoin, minimal_algorithms.examples.sliding_aggregation.MinSlidingSMAO, minimal_algorithms.examples.ranking.RankingMAO, minimal_algorithms.StatisticsMinimalAlgorithmObject, minimal_algorithms.statistics_aggregators.StatisticsAggregator, minimal_algorithms.examples.sliding_aggregation.AvgSlidingSMAO, minimal_algorithms.group_by.MAOPair, minimal_algorithms.examples.prefix.MaxPrefixSMAO, minimal_algorithms.examples.sliding_aggregation.MaxSlidingSMAO, minimal_algorithms.MinimalAlgorithm.KeyPartitioner, minimal_algorithms.statistics_aggregators.AvgAggregator, minimal_algorithms.examples.prefix.SumPrefixSMAO, minimal_algorithms.examples.ranking.ExampleRankingUsingPrefixSum, minimal_algorithms.examples.ranking.RankAsPrefixSMAO, minimal_algorithms.group_by.GroupByKey, minimal_algorithms.semi_join.SemiJoinSetTypeEnum, minimal_algorithms.examples.sliding_aggregation.SumSlidingSMAO, minimal_algorithms.statistics_aggregators.MinAggregator, minimal_algorithms.RangeTree, minimal_algorithms.examples.prefix.ExamplePrefix, minimal_algorithms.MinimalAlgorithm.PerfectPartitioner)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/semi_join/MinimalSemiJoin.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/group_by/ExampleGroupBy.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/Utils.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/RangeTree.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/semi_join/SemiJoinObject.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/statistics_aggregators/AvgAggregator.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/statistics_aggregators/StatisticsAggregator.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/semi_join/SemiJoinType.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/statistics_aggregators/MinAggregator.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/ranking/RankingObject.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/prefix/ExamplePrefix.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/statistics_aggregators/MaxAggregator.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/MinimalAlgorithm.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/ranking/ExampleRanking.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/statistics_aggregators/SumAggregator.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/semi_join/ExampleSemiJoin.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/group_by/MinimalGroupBy.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/ranking/ExampleRankingUsingPrefixSum.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/examples/sliding_aggregation/ExampleSlidingAggregation.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/sliding_aggregation/MinimalSlidingAggregation.scala, /Users/mateuszkiebala/studia/master_thesis/library/src/main/scala/minimal_algorithms/statistics_aggregators/StatisticsUtils.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 23 sources: invalidated sources (42) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 23 Scala sources to /Users/mateuszkiebala/studia/master_thesis/library/target/scala-2.11/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.11:1.2.1:compile for Scala 2.11.8[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.11:1.2.1:compile for Scala 2.11.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 16692cc4 for Scala compiler version 2.11.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/classes:/Users/mateuszkiebala/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/mateuszkiebala/studia/master_thesis/library/target/scala-2.11/classes:/Users/mateuszkiebala/.ivy2/cache/org.apache.spark/spark-sql_2.11/jars/spark-sql_2.11-2.3.2.jar:/Users/mateuszkiebala/.ivy2/cache/com.univocity/univocity-parsers/jars/univocity-parsers-2.5.9.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.spark/spark-sketch_2.11/jars/spark-sketch_2.11-2.3.2.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.spark/spark-tags_2.11/jars/spark-tags_2.11-2.3.2.jar:/Users/mateuszkiebala/.ivy2/cache/org.spark-project.spark/unused/jars/unused-1.0.0.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.spark/spark-core_2.11/jars/spark-core_2.11-2.3.2.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.avro/avro/jars/avro-1.7.7.jar:/Users/mateuszkiebala/.ivy2/cache/org.codehaus.jackson/jackson-core-asl/jars/jackson-core-asl-1.9.13.jar:/Users/mateuszkiebala/.ivy2/cache/org.codehaus.jackson/jackson-mapper-asl/jars/jackson-mapper-asl-1.9.13.jar:/Users/mateuszkiebala/.ivy2/cache/org.xerial.snappy/snappy-java/bundles/snappy-java-1.1.2.6.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.commons/commons-compress/jars/commons-compress-1.4.1.jar:/Users/mateuszkiebala/.ivy2/cache/org.tukaani/xz/jars/xz-1.0.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.avro/avro-mapred/jars/avro-mapred-1.7.7-hadoop2.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.avro/avro-ipc/jars/avro-ipc-1.7.7-tests.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.avro/avro-ipc/jars/avro-ipc-1.7.7.jar:/Users/mateuszkiebala/.ivy2/cache/com.twitter/chill_2.11/jars/chill_2.11-0.8.4.jar:/Users/mateuszkiebala/.ivy2/cache/com.twitter/chill-java/jars/chill-java-0.8.4.jar:/Users/mateuszkiebala/.ivy2/cache/com.esotericsoftware/kryo-shaded/bundles/kryo-shaded-3.0.3.jar:/Users/mateuszkiebala/.ivy2/cache/com.esotericsoftware/minlog/bundles/minlog-1.3.0.jar:/Users/mateuszkiebala/.ivy2/cache/org.objenesis/objenesis/jars/objenesis-2.1.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.xbean/xbean-asm5-shaded/bundles/xbean-asm5-shaded-4.4.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.hadoop/hadoop-client/jars/hadoop-client-2.6.5.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.hadoop/hadoop-common/jars/hadoop-common-2.6.5.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.hadoop/hadoop-annotations/jars/hadoop-annotations-2.6.5.jar:/Users/mateuszkiebala/.ivy2/cache/com.google.guava/guava/jars/guava-11.0.2.jar:/Users/mateuszkiebala/.ivy2/cache/commons-cli/commons-cli/jars/commons-cli-1.2.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.commons/commons-math3/jars/commons-math3-3.4.1.jar:/Users/mateuszkiebala/.ivy2/cache/xmlenc/xmlenc/jars/xmlenc-0.52.jar:/Users/mateuszkiebala/.ivy2/cache/commons-httpclient/commons-httpclient/jars/commons-httpclient-3.1.jar:/Users/mateuszkiebala/.ivy2/cache/commons-io/commons-io/jars/commons-io-2.4.jar:/Users/mateuszkiebala/.ivy2/cache/commons-net/commons-net/jars/commons-net-2.2.jar:/Users/mateuszkiebala/.ivy2/cache/commons-collections/commons-collections/jars/commons-collections-3.2.2.jar:/Users/mateuszkiebala/.ivy2/cache/log4j/log4j/bundles/log4j-1.2.17.jar:/Users/mateuszkiebala/.ivy2/cache/commons-lang/commons-lang/jars/commons-lang-2.6.jar:/Users/mateuszkiebala/.ivy2/cache/commons-configuration/commons-configuration/jars/commons-configuration-1.6.jar:/Users/mateuszkiebala/.ivy2/cache/commons-digester/commons-digester/jars/commons-digester-1.8.jar:/Users/mateuszkiebala/.ivy2/cache/commons-beanutils/commons-beanutils/jars/commons-beanutils-1.7.0.jar:/Users/mateuszkiebala/.ivy2/cache/commons-beanutils/commons-beanutils-core/jars/commons-beanutils-core-1.8.0.jar:/Users/mateuszkiebala/.ivy2/cache/com.google.protobuf/protobuf-java/bundles/protobuf-java-2.5.0.jar:/Users/mateuszkiebala/.ivy2/cache/com.google.code.gson/gson/jars/gson-2.2.4.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.hadoop/hadoop-auth/jars/hadoop-auth-2.6.5.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.directory.server/apacheds-kerberos-codec/bundles/apacheds-kerberos-codec-2.0.0-M15.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.directory.server/apacheds-i18n/bundles/apacheds-i18n-2.0.0-M15.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.directory.api/api-asn1-api/bundles/api-asn1-api-1.0.0-M20.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.directory.api/api-util/bundles/api-util-1.0.0-M20.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.curator/curator-framework/bundles/curator-framework-2.6.0.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.curator/curator-client/bundles/curator-client-2.6.0.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.zookeeper/zookeeper/jars/zookeeper-3.4.6.jar:/Users/mateuszkiebala/.ivy2/cache/jline/jline/jars/jline-0.9.94.jar:/Users/mateuszkiebala/.ivy2/cache/io.netty/netty/bundles/netty-3.9.9.Final.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.curator/curator-recipes/bundles/curator-recipes-2.6.0.jar:/Users/mateuszkiebala/.ivy2/cache/org.htrace/htrace-core/jars/htrace-core-3.0.4.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.hadoop/hadoop-hdfs/jars/hadoop-hdfs-2.6.5.jar:/Users/mateuszkiebala/.ivy2/cache/org.mortbay.jetty/jetty-util/jars/jetty-util-6.1.26.jar:/Users/mateuszkiebala/.ivy2/cache/xerces/xercesImpl/jars/xercesImpl-2.9.1.jar:/Users/mateuszkiebala/.ivy2/cache/xml-apis/xml-apis/jars/xml-apis-1.3.04.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.hadoop/hadoop-mapreduce-client-app/jars/hadoop-mapreduce-client-app-2.6.5.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.hadoop/hadoop-mapreduce-client-common/jars/hadoop-mapreduce-client-common-2.6.5.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.hadoop/hadoop-yarn-common/jars/hadoop-yarn-common-2.6.5.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.hadoop/hadoop-yarn-api/jars/hadoop-yarn-api-2.6.5.jar:/Users/mateuszkiebala/.ivy2/cache/javax.xml.bind/jaxb-api/jars/jaxb-api-2.2.2.jar:/Users/mateuszkiebala/.ivy2/cache/javax.xml.stream/stax-api/jars/stax-api-1.0-2.jar:/Users/mateuszkiebala/.ivy2/cache/org.codehaus.jackson/jackson-jaxrs/jars/jackson-jaxrs-1.9.13.jar:/Users/mateuszkiebala/.ivy2/cache/org.codehaus.jackson/jackson-xc/jars/jackson-xc-1.9.13.jar:/Users/mateuszkiebala/.ivy2/cache/com.google.inject/guice/jars/guice-3.0.jar:/Users/mateuszkiebala/.ivy2/cache/javax.inject/javax.inject/jars/javax.inject-1.jar:/Users/mateuszkiebala/.ivy2/cache/aopalliance/aopalliance/jars/aopalliance-1.0.jar:/Users/mateuszkiebala/.ivy2/cache/org.sonatype.sisu.inject/cglib/jars/cglib-2.2.1-v20090111.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.hadoop/hadoop-yarn-client/jars/hadoop-yarn-client-2.6.5.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.hadoop/hadoop-mapreduce-client-core/jars/hadoop-mapreduce-client-core-2.6.5.jar:/Users/mateuszkiebala/.ivy2/cache/org.slf4j/slf4j-log4j12/jars/slf4j-log4j12-1.7.16.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.hadoop/hadoop-yarn-server-common/jars/hadoop-yarn-server-common-2.6.5.jar:/Users/mateuszkiebala/.ivy2/cache/org.fusesource.leveldbjni/leveldbjni-all/bundles/leveldbjni-all-1.8.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.hadoop/hadoop-mapreduce-client-shuffle/jars/hadoop-mapreduce-client-shuffle-2.6.5.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.hadoop/hadoop-mapreduce-client-jobclient/jars/hadoop-mapreduce-client-jobclient-2.6.5.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.spark/spark-launcher_2.11/jars/spark-launcher_2.11-2.3.2.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.spark/spark-kvstore_2.11/jars/spark-kvstore_2.11-2.3.2.jar:/Users/mateuszkiebala/.ivy2/cache/com.fasterxml.jackson.core/jackson-databind/bundles/jackson-databind-2.6.7.1.jar:/Users/mateuszkiebala/.ivy2/cache/com.fasterxml.jackson.core/jackson-annotations/bundles/jackson-annotations-2.6.7.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.spark/spark-network-common_2.11/jars/spark-network-common_2.11-2.3.2.jar:/Users/mateuszkiebala/.ivy2/cache/io.netty/netty-all/jars/netty-all-4.1.17.Final.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.commons/commons-lang3/jars/commons-lang3-3.5.jar:/Users/mateuszkiebala/.ivy2/cache/io.dropwizard.metrics/metrics-core/bundles/metrics-core-3.1.5.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.commons/commons-crypto/jars/commons-crypto-1.0.0.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.spark/spark-network-shuffle_2.11/jars/spark-network-shuffle_2.11-2.3.2.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.spark/spark-unsafe_2.11/jars/spark-unsafe_2.11-2.3.2.jar:/Users/mateuszkiebala/.ivy2/cache/net.java.dev.jets3t/jets3t/jars/jets3t-0.9.4.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.httpcomponents/httpcore/jars/httpcore-4.4.1.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.httpcomponents/httpclient/jars/httpclient-4.5.jar:/Users/mateuszkiebala/.ivy2/cache/commons-codec/commons-codec/jars/commons-codec-1.12.jar:/Users/mateuszkiebala/.ivy2/cache/javax.activation/activation/jars/activation-1.1.1.jar:/Users/mateuszkiebala/.ivy2/cache/org.bouncycastle/bcprov-jdk15on/jars/bcprov-jdk15on-1.52.jar:/Users/mateuszkiebala/.ivy2/cache/com.jamesmurty.utils/java-xmlbuilder/jars/java-xmlbuilder-1.1.jar:/Users/mateuszkiebala/.ivy2/cache/net.iharder/base64/jars/base64-2.3.8.jar:/Users/mateuszkiebala/.ivy2/cache/javax.servlet/javax.servlet-api/jars/javax.servlet-api-3.1.0.jar:/Users/mateuszkiebala/.ivy2/cache/org.slf4j/jul-to-slf4j/jars/jul-to-slf4j-1.7.16.jar:/Users/mateuszkiebala/.ivy2/cache/org.slf4j/jcl-over-slf4j/jars/jcl-over-slf4j-1.7.16.jar:/Users/mateuszkiebala/.ivy2/cache/com.ning/compress-lzf/bundles/compress-lzf-1.0.3.jar:/Users/mateuszkiebala/.ivy2/cache/org.lz4/lz4-java/jars/lz4-java-1.4.0.jar:/Users/mateuszkiebala/.ivy2/cache/com.github.luben/zstd-jni/bundles/zstd-jni-1.3.2-2.jar:/Users/mateuszkiebala/.ivy2/cache/org.roaringbitmap/RoaringBitmap/bundles/RoaringBitmap-0.5.11.jar:/Users/mateuszkiebala/.ivy2/cache/org.json4s/json4s-jackson_2.11/jars/json4s-jackson_2.11-3.2.11.jar:/Users/mateuszkiebala/.ivy2/cache/org.json4s/json4s-core_2.11/jars/json4s-core_2.11-3.2.11.jar:/Users/mateuszkiebala/.ivy2/cache/org.json4s/json4s-ast_2.11/jars/json4s-ast_2.11-3.2.11.jar:/Users/mateuszkiebala/.ivy2/cache/org.scala-lang/scalap/jars/scalap-2.11.8.jar:/Users/mateuszkiebala/.ivy2/cache/org.scala-lang/scala-compiler/jars/scala-compiler-2.11.8.jar:/Users/mateuszkiebala/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.8.jar:/Users/mateuszkiebala/.ivy2/cache/org.scala-lang.modules/scala-xml_2.11/bundles/scala-xml_2.11-1.0.4.jar:/Users/mateuszkiebala/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.11/bundles/scala-parser-combinators_2.11-1.0.4.jar:/Users/mateuszkiebala/.ivy2/cache/org.glassfish.jersey.core/jersey-client/jars/jersey-client-2.22.2.jar:/Users/mateuszkiebala/.ivy2/cache/javax.ws.rs/javax.ws.rs-api/jars/javax.ws.rs-api-2.0.1.jar:/Users/mateuszkiebala/.ivy2/cache/org.glassfish.jersey.core/jersey-common/jars/jersey-common-2.22.2.jar:/Users/mateuszkiebala/.ivy2/cache/javax.annotation/javax.annotation-api/jars/javax.annotation-api-1.2.jar:/Users/mateuszkiebala/.ivy2/cache/org.glassfish.jersey.bundles.repackaged/jersey-guava/bundles/jersey-guava-2.22.2.jar:/Users/mateuszkiebala/.ivy2/cache/org.glassfish.hk2/hk2-api/jars/hk2-api-2.4.0-b34.jar:/Users/mateuszkiebala/.ivy2/cache/org.glassfish.hk2/hk2-utils/jars/hk2-utils-2.4.0-b34.jar:/Users/mateuszkiebala/.ivy2/cache/org.glassfish.hk2.external/aopalliance-repackaged/jars/aopalliance-repackaged-2.4.0-b34.jar:/Users/mateuszkiebala/.ivy2/cache/org.glassfish.hk2.external/javax.inject/jars/javax.inject-2.4.0-b34.jar:/Users/mateuszkiebala/.ivy2/cache/org.glassfish.hk2/hk2-locator/jars/hk2-locator-2.4.0-b34.jar:/Users/mateuszkiebala/.ivy2/cache/org.javassist/javassist/bundles/javassist-3.18.1-GA.jar:/Users/mateuszkiebala/.ivy2/cache/org.glassfish.hk2/osgi-resource-locator/jars/osgi-resource-locator-1.0.1.jar:/Users/mateuszkiebala/.ivy2/cache/org.glassfish.jersey.core/jersey-server/jars/jersey-server-2.22.2.jar:/Users/mateuszkiebala/.ivy2/cache/org.glassfish.jersey.media/jersey-media-jaxb/jars/jersey-media-jaxb-2.22.2.jar:/Users/mateuszkiebala/.ivy2/cache/javax.validation/validation-api/jars/validation-api-1.1.0.Final.jar:/Users/mateuszkiebala/.ivy2/cache/org.glassfish.jersey.containers/jersey-container-servlet/jars/jersey-container-servlet-2.22.2.jar:/Users/mateuszkiebala/.ivy2/cache/org.glassfish.jersey.containers/jersey-container-servlet-core/jars/jersey-container-servlet-core-2.22.2.jar:/Users/mateuszkiebala/.ivy2/cache/com.clearspring.analytics/stream/jars/stream-2.7.0.jar:/Users/mateuszkiebala/.ivy2/cache/io.dropwizard.metrics/metrics-jvm/bundles/metrics-jvm-3.1.5.jar:/Users/mateuszkiebala/.ivy2/cache/io.dropwizard.metrics/metrics-json/bundles/metrics-json-3.1.5.jar:/Users/mateuszkiebala/.ivy2/cache/io.dropwizard.metrics/metrics-graphite/bundles/metrics-graphite-3.1.5.jar:/Users/mateuszkiebala/.ivy2/cache/com.fasterxml.jackson.module/jackson-module-scala_2.11/bundles/jackson-module-scala_2.11-2.6.7.1.jar:/Users/mateuszkiebala/.ivy2/cache/com.fasterxml.jackson.module/jackson-module-paranamer/bundles/jackson-module-paranamer-2.7.9.jar:/Users/mateuszkiebala/.ivy2/cache/com.thoughtworks.paranamer/paranamer/bundles/paranamer-2.8.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.ivy/ivy/jars/ivy-2.4.0.jar:/Users/mateuszkiebala/.ivy2/cache/oro/oro/jars/oro-2.0.8.jar:/Users/mateuszkiebala/.ivy2/cache/net.razorvine/pyrolite/jars/pyrolite-4.13.jar:/Users/mateuszkiebala/.ivy2/cache/net.sf.py4j/py4j/jars/py4j-0.10.7.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.spark/spark-catalyst_2.11/jars/spark-catalyst_2.11-2.3.2.jar:/Users/mateuszkiebala/.ivy2/cache/org.codehaus.janino/janino/jars/janino-3.0.8.jar:/Users/mateuszkiebala/.ivy2/cache/org.codehaus.janino/commons-compiler/jars/commons-compiler-3.0.8.jar:/Users/mateuszkiebala/.ivy2/cache/org.antlr/antlr4-runtime/jars/antlr4-runtime-4.7.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.orc/orc-core/jars/orc-core-1.4.4-nohive.jar:/Users/mateuszkiebala/.ivy2/cache/io.airlift/aircompressor/jars/aircompressor-0.8.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.orc/orc-mapreduce/jars/orc-mapreduce-1.4.4-nohive.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.parquet/parquet-column/jars/parquet-column-1.8.3.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.parquet/parquet-common/jars/parquet-common-1.8.3.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.parquet/parquet-encoding/jars/parquet-encoding-1.8.3.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.parquet/parquet-hadoop/jars/parquet-hadoop-1.8.3.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.parquet/parquet-format/jars/parquet-format-2.3.1.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.parquet/parquet-jackson/jars/parquet-jackson-1.8.3.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.arrow/arrow-vector/jars/arrow-vector-0.8.0.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.arrow/arrow-format/jars/arrow-format-0.8.0.jar:/Users/mateuszkiebala/.ivy2/cache/com.vlkan/flatbuffers/jars/flatbuffers-1.2.0-3f79e055.jar:/Users/mateuszkiebala/.ivy2/cache/org.apache.arrow/arrow-memory/jars/arrow-memory-0.8.0.jar:/Users/mateuszkiebala/.ivy2/cache/com.google.code.findbugs/jsr305/jars/jsr305-3.0.2.jar:/Users/mateuszkiebala/.ivy2/cache/org.slf4j/slf4j-api/jars/slf4j-api-1.7.25.jar:/Users/mateuszkiebala/.ivy2/cache/joda-time/joda-time/jars/joda-time-2.9.9.jar:/Users/mateuszkiebala/.ivy2/cache/com.fasterxml.jackson.core/jackson-core/bundles/jackson-core-2.7.9.jar:/Users/mateuszkiebala/.ivy2/cache/com.carrotsearch/hppc/bundles/hppc-0.7.2.jar:/Users/mateuszkiebala/.ivy2/cache/org.codehaus.jettison/jettison/bundles/jettison-1.1.jar:/Users/mateuszkiebala/.ivy2/cache/org.scalactic/scalactic_2.11/bundles/scalactic_2.11-3.0.5.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 7.266288583 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.group_by.MAOPair...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.group_by.MAOPair)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.group_by.MAOPair)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.group_by.MAOPair,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(MAOPair,[Default]), UsedName(getValue,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(minimal_algorithms;group_by;MAOPair;init;,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.group_by.MAOPair has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(MAOPair,[Default]), UsedName(getValue,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(minimal_algorithms;group_by;MAOPair;init;,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.group_by.MAOPair)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.StatisticsMinimalAlgorithmObject...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.StatisticsMinimalAlgorithmObject)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.StatisticsMinimalAlgorithmObject)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.StatisticsMinimalAlgorithmObject,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(getAggregator,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(StatisticsMinimalAlgorithmObject,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.StatisticsMinimalAlgorithmObject has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(getAggregator,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(StatisticsMinimalAlgorithmObject,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.StatisticsMinimalAlgorithmObject)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.statistics_aggregators.MaxAggregator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.statistics_aggregators.MaxAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.statistics_aggregators.MaxAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.group_by.ExampleGroupBy: Set(UsedName(minimal_algorithms;examples;statistics_aggregators;MaxAggregator;init;,[Default]), UsedName(MaxAggregator,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.group_by.InputObject: Set(UsedName(MaxAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.statistics_aggregators.MaxAggregator,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(minimal_algorithms;examples;statistics_aggregators;MaxAggregator;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(merge,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getValue,[Default]), UsedName(MaxAggregator,[Default]), UsedName(!=,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 3 classes due to The minimal_algorithms.examples.statistics_aggregators.MaxAggregator has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(minimal_algorithms;examples;statistics_aggregators;MaxAggregator;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(merge,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getValue,[Default]), UsedName(MaxAggregator,[Default]), UsedName(!=,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.statistics_aggregators.MaxAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(minimal_algorithms.examples.group_by.ExampleGroupBy, minimal_algorithms.examples.group_by.InputObject)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.statistics_aggregators.StatisticsAggregator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.statistics_aggregators.StatisticsAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding minimal_algorithms.examples.statistics_aggregators.AvgAggregator by minimal_algorithms.statistics_aggregators.StatisticsAggregator[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding minimal_algorithms.examples.statistics_aggregators.MinAggregator by minimal_algorithms.statistics_aggregators.StatisticsAggregator[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding minimal_algorithms.examples.statistics_aggregators.MaxAggregator by minimal_algorithms.statistics_aggregators.StatisticsAggregator[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding minimal_algorithms.examples.statistics_aggregators.SumAggregator by minimal_algorithms.statistics_aggregators.StatisticsAggregator[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.statistics_aggregators.AvgAggregator, minimal_algorithms.examples.statistics_aggregators.MinAggregator, minimal_algorithms.examples.statistics_aggregators.SumAggregator, minimal_algorithms.statistics_aggregators.StatisticsAggregator, minimal_algorithms.examples.statistics_aggregators.MaxAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.group_by.ExampleGroupBy: Set(UsedName(StatisticsAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of minimal_algorithms.examples.group_by.InputObject. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of minimal_algorithms.examples.group_by.InputObject. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.group_by.ExampleGroupBy: Set(UsedName(StatisticsAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.sliding_aggregation.ExampleSlidingAggregation: Set(UsedName(StatisticsAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.group_by.ExampleGroupBy: Set(UsedName(StatisticsAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.ranking.ExampleRankingUsingPrefixSum: Set(UsedName(StatisticsAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of minimal_algorithms.examples.group_by.InputObject. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of minimal_algorithms.examples.sliding_aggregation.InputObject. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of minimal_algorithms.examples.prefix.InputObject. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.prefix.ExamplePrefix: Set(UsedName(StatisticsAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.sliding_aggregation.MinimalSlidingAggregation: Set(UsedName(StatisticsAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.MinimalAlgorithm: Set(UsedName(StatisticsAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.statistics_aggregators.StatisticsUtils: Set(UsedName(merge,[Default]), UsedName(StatisticsAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.statistics_aggregators.AvgAggregator: Set(UsedName(StatisticsAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.group_by.MinimalGroupBy: Set(UsedName(StatisticsAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.sliding_aggregation.ExampleSlidingAggregation: Set(UsedName(StatisticsAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.group_by.GroupByObject: Set(UsedName(StatisticsAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.statistics_aggregators.MinAggregator: Set(UsedName(StatisticsAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.statistics_aggregators.SumAggregator: Set(UsedName(StatisticsAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.group_by.ExampleGroupBy: Set(UsedName(StatisticsAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.statistics_aggregators.MaxAggregator: Set(UsedName(StatisticsAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.ranking.ExampleRankingUsingPrefixSum: Set(UsedName(StatisticsAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.RangeTree: Set(UsedName(StatisticsAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.prefix.ExamplePrefix: Set(UsedName(StatisticsAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.group_by.ExampleGroupBy: Set(UsedName(StatisticsAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of minimal_algorithms.examples.group_by.InputObject. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.statistics_aggregators.StatisticsAggregator,ModifiedNames(changes = UsedName(StatisticsAggregator,[Default]), UsedName(merge,[Default]))) invalidates 15 classes due to The minimal_algorithms.statistics_aggregators.StatisticsAggregator has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(StatisticsAggregator,[Default]), UsedName(merge,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.statistics_aggregators.AvgAggregator, minimal_algorithms.examples.statistics_aggregators.MinAggregator, minimal_algorithms.examples.statistics_aggregators.SumAggregator, minimal_algorithms.statistics_aggregators.StatisticsAggregator, minimal_algorithms.examples.statistics_aggregators.MaxAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(minimal_algorithms.sliding_aggregation.MinimalSlidingAggregation, minimal_algorithms.MinimalAlgorithm, minimal_algorithms.statistics_aggregators.StatisticsUtils, minimal_algorithms.examples.statistics_aggregators.AvgAggregator, minimal_algorithms.group_by.MinimalGroupBy, minimal_algorithms.examples.sliding_aggregation.ExampleSlidingAggregation, minimal_algorithms.group_by.GroupByObject, minimal_algorithms.examples.statistics_aggregators.MinAggregator, minimal_algorithms.examples.statistics_aggregators.SumAggregator, minimal_algorithms.examples.group_by.ExampleGroupBy, minimal_algorithms.examples.statistics_aggregators.MaxAggregator, minimal_algorithms.examples.ranking.ExampleRankingUsingPrefixSum, minimal_algorithms.RangeTree, minimal_algorithms.examples.prefix.ExamplePrefix)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.sliding_aggregation.MaxSlidingSMAO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.sliding_aggregation.MaxSlidingSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.sliding_aggregation.MaxSlidingSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.sliding_aggregation.MaxSlidingSMAO,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(getAggregator,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(MaxSlidingSMAO,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(minimal_algorithms;examples;sliding_aggregation;MaxSlidingSMAO;init;,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.examples.sliding_aggregation.MaxSlidingSMAO has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(getAggregator,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(MaxSlidingSMAO,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(minimal_algorithms;examples;sliding_aggregation;MaxSlidingSMAO;init;,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.sliding_aggregation.MaxSlidingSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.ranking.RankingMAO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.ranking.RankingMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.ranking.RankingMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.ranking.RankingMAO,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName(RankingMAO,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(minimal_algorithms;examples;ranking;RankingMAO;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.examples.ranking.RankingMAO has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName(RankingMAO,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(minimal_algorithms;examples;ranking;RankingMAO;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.ranking.RankingMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.sliding_aggregation.MinimalSlidingAggregation...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.sliding_aggregation.MinimalSlidingAggregation)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.sliding_aggregation.MinimalSlidingAggregation)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.sliding_aggregation.InputObject: Set(UsedName(MinimalSlidingAggregation,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.sliding_aggregation.ExampleSlidingAggregation: Set(UsedName(MinimalSlidingAggregation,[Default]), UsedName(aggregate,[Default]), UsedName(aggregate$default$5,[Default]), UsedName(minimal_algorithms;sliding_aggregation;MinimalSlidingAggregation;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.sliding_aggregation.MinimalSlidingAggregation,ModifiedNames(changes = UsedName(importObjects,[Default]), UsedName(MinimalSlidingAggregation,[Default]), UsedName(getPartitionsStatistics,[Default]), UsedName(perfectSort$default$3,[Default]), UsedName(computePrefix,[Default]), UsedName(perfectSort,[Default]), UsedName(getPrefixedPartitionStatistics,[Default]), UsedName(sendToMachines,[Default]), UsedName(prefix,[Default]), UsedName(computeItemsCntByPartition$default$2,[Default]), UsedName(aggregate,[Default]), UsedName(objects,[Default]), UsedName(perfectSortWithRanks,[Default]), UsedName(rank,[Default]), UsedName(aggregate$default$5,[Default]), UsedName(perfectlySorted,[Default]), UsedName(perfectSortWithRanks$default$3,[Default]), UsedName(computeRanking,[Default]), UsedName(computeItemsCntByPartition,[Default]), UsedName(teraSort,[Default]), UsedName(execute,[Default]), UsedName(perfectlySortedWithRanks,[Default]), UsedName(getPartitionSizes,[Default]), UsedName(itemsCntByPartition,[Default]), UsedName(teraSorted,[Default]), UsedName(minimal_algorithms;sliding_aggregation;MinimalSlidingAggregation;init;,[Default]))) invalidates 3 classes due to The minimal_algorithms.sliding_aggregation.MinimalSlidingAggregation has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(importObjects,[Default]), UsedName(MinimalSlidingAggregation,[Default]), UsedName(getPartitionsStatistics,[Default]), UsedName(perfectSort$default$3,[Default]), UsedName(computePrefix,[Default]), UsedName(perfectSort,[Default]), UsedName(getPrefixedPartitionStatistics,[Default]), UsedName(sendToMachines,[Default]), UsedName(prefix,[Default]), UsedName(computeItemsCntByPartition$default$2,[Default]), UsedName(aggregate,[Default]), UsedName(objects,[Default]), UsedName(perfectSortWithRanks,[Default]), UsedName(rank,[Default]), UsedName(aggregate$default$5,[Default]), UsedName(perfectlySorted,[Default]), UsedName(perfectSortWithRanks$default$3,[Default]), UsedName(computeRanking,[Default]), UsedName(computeItemsCntByPartition,[Default]), UsedName(teraSort,[Default]), UsedName(execute,[Default]), UsedName(perfectlySortedWithRanks,[Default]), UsedName(getPartitionSizes,[Default]), UsedName(itemsCntByPartition,[Default]), UsedName(teraSorted,[Default]), UsedName(minimal_algorithms;sliding_aggregation;MinimalSlidingAggregation;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.sliding_aggregation.MinimalSlidingAggregation)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(minimal_algorithms.examples.sliding_aggregation.InputObject, minimal_algorithms.examples.sliding_aggregation.ExampleSlidingAggregation)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.MinimalAlgorithmObject...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.MinimalAlgorithmObject)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.MinimalAlgorithmObject)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.MinimalAlgorithmObject,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(MinimalAlgorithmObject,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.MinimalAlgorithmObject has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(MinimalAlgorithmObject,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.MinimalAlgorithmObject)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.statistics_aggregators.AvgAggregator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.statistics_aggregators.AvgAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.statistics_aggregators.AvgAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.group_by.ExampleGroupBy: Set(UsedName(minimal_algorithms;examples;statistics_aggregators;AvgAggregator;init;,[Default]), UsedName(AvgAggregator,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.group_by.InputObject: Set(UsedName(AvgAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.statistics_aggregators.AvgAggregator,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(minimal_algorithms;examples;statistics_aggregators;AvgAggregator;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(merge,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getCount,[Default]), UsedName(getSum,[Default]), UsedName(getValue,[Default]), UsedName(!=,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(AvgAggregator,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 3 classes due to The minimal_algorithms.examples.statistics_aggregators.AvgAggregator has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(minimal_algorithms;examples;statistics_aggregators;AvgAggregator;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(merge,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getCount,[Default]), UsedName(getSum,[Default]), UsedName(getValue,[Default]), UsedName(!=,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(AvgAggregator,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.statistics_aggregators.AvgAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(minimal_algorithms.examples.group_by.ExampleGroupBy, minimal_algorithms.examples.group_by.InputObject)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.Utils...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.Utils)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.Utils)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.sliding_aggregation.MinimalSlidingAggregation: Set(UsedName(sendToAllMachines,[Default]), UsedName(sendToMachines,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Utils,[Default]), UsedName(ne,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.MinimalSemiJoin: Set(UsedName(==,[Default]), UsedName(sendToAllMachines,[Default]), UsedName(Utils,[Default]), UsedName(ne,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.MinimalAlgorithm: Set(UsedName(sendToAllHigherMachines,[Default]), UsedName(Utils,[Default]), UsedName(ne,[Default]), UsedName(partitionSizes,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.group_by.MinimalGroupBy: Set(UsedName(==,[Default]), UsedName(sendToMachines,[Default]), UsedName(Utils,[Default]), UsedName(ne,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.Utils,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName(sendToAllLowerMachines,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(sendToAllMachines,[Default]), UsedName(sendToMachines,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(partitionByKey$default$2,[Default]), UsedName(sendToRangeMachines,[Default]), UsedName(sendToAllHigherMachines,[Default]), UsedName(synchronized,[Default]), UsedName(partitionByKey,[Default]), UsedName(Utils,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(partitionSizes,[Default]), UsedName(hashCode,[Default]), UsedName(KeyPartitioner,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 5 classes due to The minimal_algorithms.Utils has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName(sendToAllLowerMachines,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(sendToAllMachines,[Default]), UsedName(sendToMachines,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(partitionByKey$default$2,[Default]), UsedName(sendToRangeMachines,[Default]), UsedName(sendToAllHigherMachines,[Default]), UsedName(synchronized,[Default]), UsedName(partitionByKey,[Default]), UsedName(Utils,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(partitionSizes,[Default]), UsedName(hashCode,[Default]), UsedName(KeyPartitioner,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.Utils)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(minimal_algorithms.sliding_aggregation.MinimalSlidingAggregation, minimal_algorithms.MinimalSemiJoin, minimal_algorithms.MinimalAlgorithm, minimal_algorithms.group_by.MinimalGroupBy)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.ranking.RankAsPrefixSMAO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.ranking.RankAsPrefixSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.ranking.RankAsPrefixSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.ranking.RankAsPrefixSMAO,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(getAggregator,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(minimal_algorithms;examples;ranking;RankAsPrefixSMAO;init;,[Default]), UsedName(RankAsPrefixSMAO,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.examples.ranking.RankAsPrefixSMAO has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(getAggregator,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(minimal_algorithms;examples;ranking;RankAsPrefixSMAO;init;,[Default]), UsedName(RankAsPrefixSMAO,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.ranking.RankAsPrefixSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.prefix.MinPrefixSMAO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.prefix.MinPrefixSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.prefix.MinPrefixSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.prefix.MinPrefixSMAO,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(getAggregator,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(minimal_algorithms;examples;prefix;MinPrefixSMAO;init;,[Default]), UsedName(getWeight,[Default]), UsedName(MinPrefixSMAO,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.examples.prefix.MinPrefixSMAO has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(getAggregator,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(minimal_algorithms;examples;prefix;MinPrefixSMAO;init;,[Default]), UsedName(getWeight,[Default]), UsedName(MinPrefixSMAO,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.prefix.MinPrefixSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.group_by.GroupByKey...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.group_by.GroupByKey)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.group_by.GroupByKey)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.group_by.GroupByKey,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(GroupByKey,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.group_by.GroupByKey has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(GroupByKey,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.group_by.GroupByKey)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.semi_join.SemiJoinType...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.semi_join.SemiJoinType)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.semi_join.SemiJoinType)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.semi_join.ExampleSemiJoin: Set(UsedName(SemiJoinType,[Default]), UsedName(toString,[Default]), UsedName(cmpKey,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.semi_join.SemiJoinType,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(SemiJoinType,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(cmpKey,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 2 classes due to The minimal_algorithms.examples.semi_join.SemiJoinType has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(SemiJoinType,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(cmpKey,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.semi_join.SemiJoinType)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(minimal_algorithms.examples.semi_join.ExampleSemiJoin)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.RangeTree...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.RangeTree)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.RangeTree)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.sliding_aggregation.MinimalSlidingAggregation: Set(UsedName(minimal_algorithms;RangeTree;init;,[Default]), UsedName(RangeTree,[Default]), UsedName(query,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.RangeTree,ModifiedNames(changes = UsedName(minimal_algorithms;RangeTree;init;,[Default]), UsedName(insert,[Default]), UsedName(RangeTree,[Default]), UsedName(tree,[Default]), UsedName(query,[Default]))) invalidates 2 classes due to The minimal_algorithms.RangeTree has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(minimal_algorithms;RangeTree;init;,[Default]), UsedName(insert,[Default]), UsedName(RangeTree,[Default]), UsedName(tree,[Default]), UsedName(query,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.RangeTree)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(minimal_algorithms.sliding_aggregation.MinimalSlidingAggregation)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.prefix.MaxPrefixSMAO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.prefix.MaxPrefixSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.prefix.MaxPrefixSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.prefix.MaxPrefixSMAO,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(getAggregator,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(MaxPrefixSMAO,[Default]), UsedName(getWeight,[Default]), UsedName(minimal_algorithms;examples;prefix;MaxPrefixSMAO;init;,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.examples.prefix.MaxPrefixSMAO has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(getAggregator,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(MaxPrefixSMAO,[Default]), UsedName(getWeight,[Default]), UsedName(minimal_algorithms;examples;prefix;MaxPrefixSMAO;init;,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.prefix.MaxPrefixSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.StatisticsMinimalAlgorithm...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.StatisticsMinimalAlgorithm)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.StatisticsMinimalAlgorithm)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.StatisticsMinimalAlgorithm,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(importObjects,[Default]), UsedName(getPartitionsStatistics,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(computePrefix,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(perfectSort,[Default]), UsedName(getPrefixedPartitionStatistics,[Default]), UsedName(sendToMachines,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(sc,[Default]), UsedName(objects,[Default]), UsedName(minimal_algorithms;StatisticsMinimalAlgorithm;init;,[Default]), UsedName(!=,[Default]), UsedName(StatisticsMinimalAlgorithm,[Default]), UsedName(perfectlySorted,[Default]), UsedName(synchronized,[Default]), UsedName(computeRanking,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(teraSort,[Default]), UsedName(PerfectPartitioner,[Default]), UsedName(KeyPartitioner,[Default]), UsedName(clone,[Default]), UsedName(perfectlySortedWithRanks,[Default]), UsedName(getPartitionSizes,[Default]), UsedName(itemsCntByPartition,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(teraSorted,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.StatisticsMinimalAlgorithm has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(importObjects,[Default]), UsedName(getPartitionsStatistics,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(computePrefix,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(perfectSort,[Default]), UsedName(getPrefixedPartitionStatistics,[Default]), UsedName(sendToMachines,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(sc,[Default]), UsedName(objects,[Default]), UsedName(minimal_algorithms;StatisticsMinimalAlgorithm;init;,[Default]), UsedName(!=,[Default]), UsedName(StatisticsMinimalAlgorithm,[Default]), UsedName(perfectlySorted,[Default]), UsedName(synchronized,[Default]), UsedName(computeRanking,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(teraSort,[Default]), UsedName(PerfectPartitioner,[Default]), UsedName(KeyPartitioner,[Default]), UsedName(clone,[Default]), UsedName(perfectlySortedWithRanks,[Default]), UsedName(getPartitionSizes,[Default]), UsedName(itemsCntByPartition,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(teraSorted,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.StatisticsMinimalAlgorithm)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.statistics_aggregators.MinAggregator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.statistics_aggregators.MinAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.statistics_aggregators.MinAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.group_by.InputObject: Set(UsedName(MinAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.group_by.ExampleGroupBy: Set(UsedName(MinAggregator,[Default]), UsedName(toString,[Default]), UsedName(minimal_algorithms;examples;statistics_aggregators;MinAggregator;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.statistics_aggregators.MinAggregator,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(MinAggregator,[Default]), UsedName(==,[Default]), UsedName(merge,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getValue,[Default]), UsedName(!=,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(minimal_algorithms;examples;statistics_aggregators;MinAggregator;init;,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 3 classes due to The minimal_algorithms.examples.statistics_aggregators.MinAggregator has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(MinAggregator,[Default]), UsedName(==,[Default]), UsedName(merge,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getValue,[Default]), UsedName(!=,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(minimal_algorithms;examples;statistics_aggregators;MinAggregator;init;,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.statistics_aggregators.MinAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(minimal_algorithms.examples.group_by.InputObject, minimal_algorithms.examples.group_by.ExampleGroupBy)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.sliding_aggregation.SlidingSMAO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.sliding_aggregation.SlidingSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.sliding_aggregation.SlidingSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.sliding_aggregation.SlidingSMAO,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(getAggregator,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(SlidingSMAO,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(minimal_algorithms;examples;sliding_aggregation;SlidingSMAO;init;,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.examples.sliding_aggregation.SlidingSMAO has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(getAggregator,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(SlidingSMAO,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(minimal_algorithms;examples;sliding_aggregation;SlidingSMAO;init;,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.sliding_aggregation.SlidingSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.sliding_aggregation.InputObject...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.sliding_aggregation.InputObject)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.sliding_aggregation.InputObject)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.sliding_aggregation.InputObject,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(minimal_algorithms;examples;sliding_aggregation;InputObject;init;,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(InputObject,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.examples.sliding_aggregation.InputObject has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(minimal_algorithms;examples;sliding_aggregation;InputObject;init;,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(InputObject,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.sliding_aggregation.InputObject)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.semi_join.SemiJoinObject...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.semi_join.SemiJoinObject)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding minimal_algorithms.examples.semi_join.SemiJoinType by minimal_algorithms.semi_join.SemiJoinObject[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.semi_join.SemiJoinType, minimal_algorithms.semi_join.SemiJoinObject)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.semi_join.ExampleSemiJoin: Set(UsedName(SemiJoinObject,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.semi_join.ExampleSemiJoin: Set(UsedName(SemiJoinObject,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.semi_join.SemiJoinType: Set(UsedName(SemiJoinObject,[Default]), UsedName(minimal_algorithms;semi_join;SemiJoinObject;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.MinimalSemiJoin: Set(UsedName(SemiJoinObject,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.semi_join.SemiJoinObject,ModifiedNames(changes = UsedName(compareTo,[Default]), UsedName(minimal_algorithms;semi_join;SemiJoinObject;init;,[Default]), UsedName(SemiJoinObject,[Default]), UsedName(getKey,[Default]))) invalidates 4 classes due to The minimal_algorithms.semi_join.SemiJoinObject has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(compareTo,[Default]), UsedName(minimal_algorithms;semi_join;SemiJoinObject;init;,[Default]), UsedName(SemiJoinObject,[Default]), UsedName(getKey,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.semi_join.SemiJoinType, minimal_algorithms.semi_join.SemiJoinObject)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(minimal_algorithms.examples.semi_join.ExampleSemiJoin, minimal_algorithms.examples.semi_join.SemiJoinType, minimal_algorithms.MinimalSemiJoin)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.sliding_aggregation.SumSlidingSMAO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.sliding_aggregation.SumSlidingSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.sliding_aggregation.SumSlidingSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.sliding_aggregation.SumSlidingSMAO,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(getAggregator,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(SumSlidingSMAO,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(minimal_algorithms;examples;sliding_aggregation;SumSlidingSMAO;init;,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.examples.sliding_aggregation.SumSlidingSMAO has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(getAggregator,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(SumSlidingSMAO,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(minimal_algorithms;examples;sliding_aggregation;SumSlidingSMAO;init;,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.sliding_aggregation.SumSlidingSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.statistics_aggregators.StatisticsUtils...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.statistics_aggregators.StatisticsUtils)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.statistics_aggregators.StatisticsUtils)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.sliding_aggregation.MinimalSlidingAggregation: Set(UsedName(partitionStatistics,[Default]), UsedName(asInstanceOf,[Default]), UsedName(safeMerge,[Default]), UsedName(StatisticsUtils,[Default]), UsedName(ne,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.MinimalAlgorithm: Set(UsedName(scanLeft,[Default]), UsedName(partitionStatistics,[Default]), UsedName(foldLeft,[Default]), UsedName(StatisticsUtils,[Default]), UsedName(ne,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.RangeTree: Set(UsedName(==,[Default]), UsedName(safeMerge,[Default]), UsedName(!=,[Default]), UsedName(StatisticsUtils,[Default]), UsedName(ne,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.group_by.MinimalGroupBy: Set(UsedName(==,[Default]), UsedName(foldLeft,[Default]), UsedName(StatisticsUtils,[Default]), UsedName(ne,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.statistics_aggregators.StatisticsUtils,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(scanLeft,[Default]), UsedName(partitionStatistics,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(safeMerge,[Default]), UsedName(prefixedPartitionStatistics,[Default]), UsedName(foldLeft,[Default]), UsedName(!=,[Default]), UsedName(StatisticsUtils,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 5 classes due to The minimal_algorithms.statistics_aggregators.StatisticsUtils has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(scanLeft,[Default]), UsedName(partitionStatistics,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(safeMerge,[Default]), UsedName(prefixedPartitionStatistics,[Default]), UsedName(foldLeft,[Default]), UsedName(!=,[Default]), UsedName(StatisticsUtils,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.statistics_aggregators.StatisticsUtils)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(minimal_algorithms.sliding_aggregation.MinimalSlidingAggregation, minimal_algorithms.MinimalAlgorithm, minimal_algorithms.RangeTree, minimal_algorithms.group_by.MinimalGroupBy)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.sliding_aggregation.MinSlidingSMAO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.sliding_aggregation.MinSlidingSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.sliding_aggregation.MinSlidingSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.sliding_aggregation.MinSlidingSMAO,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(getAggregator,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(minimal_algorithms;examples;sliding_aggregation;MinSlidingSMAO;init;,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(MinSlidingSMAO,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.examples.sliding_aggregation.MinSlidingSMAO has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(getAggregator,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(minimal_algorithms;examples;sliding_aggregation;MinSlidingSMAO;init;,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(MinSlidingSMAO,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.sliding_aggregation.MinSlidingSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.statistics_aggregators.MinAggregator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.statistics_aggregators.MinAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.statistics_aggregators.MinAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.statistics_aggregators.MinAggregator,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(MinAggregator,[Default]), UsedName(==,[Default]), UsedName(merge,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getValue,[Default]), UsedName(!=,[Default]), UsedName(minimal_algorithms;statistics_aggregators;MinAggregator;init;,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.statistics_aggregators.MinAggregator has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(MinAggregator,[Default]), UsedName(==,[Default]), UsedName(merge,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getValue,[Default]), UsedName(!=,[Default]), UsedName(minimal_algorithms;statistics_aggregators;MinAggregator;init;,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.statistics_aggregators.MinAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.group_by.ExampleGroupBy...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.group_by.ExampleGroupBy)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.group_by.ExampleGroupBy)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.group_by.ExampleGroupBy,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(main,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(ExampleGroupBy,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.group_by.ExampleGroupBy has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(main,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(ExampleGroupBy,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.group_by.ExampleGroupBy)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.statistics_aggregators.Helpers...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.statistics_aggregators.Helpers)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.statistics_aggregators.Helpers)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.statistics_aggregators.Helpers,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(safeMerge,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(Helpers,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.statistics_aggregators.Helpers has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(safeMerge,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(Helpers,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.statistics_aggregators.Helpers)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.prefix.SumPrefixSMAO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.prefix.SumPrefixSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.prefix.SumPrefixSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.prefix.SumPrefixSMAO,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(getAggregator,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(minimal_algorithms;examples;prefix;SumPrefixSMAO;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(SumPrefixSMAO,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.examples.prefix.SumPrefixSMAO has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(getAggregator,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(minimal_algorithms;examples;prefix;SumPrefixSMAO;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(SumPrefixSMAO,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.prefix.SumPrefixSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.MinimalSemiJoin...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.MinimalSemiJoin)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.MinimalSemiJoin)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.semi_join.ExampleSemiJoin: Set(UsedName(perfectSort$default$3,[Default]), UsedName(MinimalSemiJoin,[Default]), UsedName(perfectSort,[Default]), UsedName(minimal_algorithms;MinimalSemiJoin;init;,[Default]), UsedName(semiJoin$default$4,[Default]), UsedName(semiJoin,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.MinimalSemiJoin,ModifiedNames(changes = UsedName(importObjects,[Default]), UsedName(perfectSort$default$3,[Default]), UsedName(MinimalSemiJoin,[Default]), UsedName(perfectSort,[Default]), UsedName(sendToMachines,[Default]), UsedName(prefix,[Default]), UsedName(computeItemsCntByPartition$default$2,[Default]), UsedName(objects,[Default]), UsedName(perfectSortWithRanks,[Default]), UsedName(rank,[Default]), UsedName(perfectlySorted,[Default]), UsedName(perfectSortWithRanks$default$3,[Default]), UsedName(computeRanking,[Default]), UsedName(minimal_algorithms;MinimalSemiJoin;init;,[Default]), UsedName(semiJoin$default$4,[Default]), UsedName(computeItemsCntByPartition,[Default]), UsedName(teraSort,[Default]), UsedName(execute,[Default]), UsedName(perfectlySortedWithRanks,[Default]), UsedName(getPartitionSizes,[Default]), UsedName(semiJoin,[Default]), UsedName(itemsCntByPartition,[Default]), UsedName(teraSorted,[Default]))) invalidates 2 classes due to The minimal_algorithms.MinimalSemiJoin has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(importObjects,[Default]), UsedName(perfectSort$default$3,[Default]), UsedName(MinimalSemiJoin,[Default]), UsedName(perfectSort,[Default]), UsedName(sendToMachines,[Default]), UsedName(prefix,[Default]), UsedName(computeItemsCntByPartition$default$2,[Default]), UsedName(objects,[Default]), UsedName(perfectSortWithRanks,[Default]), UsedName(rank,[Default]), UsedName(perfectlySorted,[Default]), UsedName(perfectSortWithRanks$default$3,[Default]), UsedName(computeRanking,[Default]), UsedName(minimal_algorithms;MinimalSemiJoin;init;,[Default]), UsedName(semiJoin$default$4,[Default]), UsedName(computeItemsCntByPartition,[Default]), UsedName(teraSort,[Default]), UsedName(execute,[Default]), UsedName(perfectlySortedWithRanks,[Default]), UsedName(getPartitionSizes,[Default]), UsedName(semiJoin,[Default]), UsedName(itemsCntByPartition,[Default]), UsedName(teraSorted,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.MinimalSemiJoin)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(minimal_algorithms.examples.semi_join.ExampleSemiJoin)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.statistics_aggregators.AvgAggregator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.statistics_aggregators.AvgAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.statistics_aggregators.AvgAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.statistics_aggregators.AvgAggregator,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(merge,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getCount,[Default]), UsedName(getSum,[Default]), UsedName(getValue,[Default]), UsedName(!=,[Default]), UsedName(canEqual,[Default]), UsedName(minimal_algorithms;statistics_aggregators;AvgAggregator;init;,[Default]), UsedName(synchronized,[Default]), UsedName(AvgAggregator,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.statistics_aggregators.AvgAggregator has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(merge,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getCount,[Default]), UsedName(getSum,[Default]), UsedName(getValue,[Default]), UsedName(!=,[Default]), UsedName(canEqual,[Default]), UsedName(minimal_algorithms;statistics_aggregators;AvgAggregator;init;,[Default]), UsedName(synchronized,[Default]), UsedName(AvgAggregator,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.statistics_aggregators.AvgAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.group_by.ExampleGroupBy...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.group_by.ExampleGroupBy)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.group_by.ExampleGroupBy)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.group_by.ExampleGroupBy,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(main,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(ExampleGroupBy,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.examples.group_by.ExampleGroupBy has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(main,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(ExampleGroupBy,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.group_by.ExampleGroupBy)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.group_by.MinimalGroupBy...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.group_by.MinimalGroupBy)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.group_by.MinimalGroupBy)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.group_by.ExampleGroupBy: Set(UsedName(perfectSort$default$3,[Default]), UsedName(perfectSort,[Default]), UsedName(groupBy$default$4,[Default]), UsedName(minimal_algorithms;group_by;MinimalGroupBy;init;,[Default]), UsedName(groupBy,[Default]), UsedName(MinimalGroupBy,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.group_by.InputObject: Set(UsedName(MinimalGroupBy,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.group_by.MinimalGroupBy,ModifiedNames(changes = UsedName(importObjects,[Default]), UsedName(getPartitionsStatistics,[Default]), UsedName(perfectSort$default$3,[Default]), UsedName(computePrefix,[Default]), UsedName(perfectSort,[Default]), UsedName(getPrefixedPartitionStatistics,[Default]), UsedName(sendToMachines,[Default]), UsedName(prefix,[Default]), UsedName(computeItemsCntByPartition$default$2,[Default]), UsedName(objects,[Default]), UsedName(groupBy$default$4,[Default]), UsedName(perfectSortWithRanks,[Default]), UsedName(rank,[Default]), UsedName(perfectlySorted,[Default]), UsedName(perfectSortWithRanks$default$3,[Default]), UsedName(computeRanking,[Default]), UsedName(minimal_algorithms;group_by;MinimalGroupBy;init;,[Default]), UsedName(computeItemsCntByPartition,[Default]), UsedName(teraSort,[Default]), UsedName(execute,[Default]), UsedName(perfectlySortedWithRanks,[Default]), UsedName(groupBy,[Default]), UsedName(getPartitionSizes,[Default]), UsedName(MinimalGroupBy,[Default]), UsedName(itemsCntByPartition,[Default]), UsedName(teraSorted,[Default]))) invalidates 3 classes due to The minimal_algorithms.group_by.MinimalGroupBy has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(importObjects,[Default]), UsedName(getPartitionsStatistics,[Default]), UsedName(perfectSort$default$3,[Default]), UsedName(computePrefix,[Default]), UsedName(perfectSort,[Default]), UsedName(getPrefixedPartitionStatistics,[Default]), UsedName(sendToMachines,[Default]), UsedName(prefix,[Default]), UsedName(computeItemsCntByPartition$default$2,[Default]), UsedName(objects,[Default]), UsedName(groupBy$default$4,[Default]), UsedName(perfectSortWithRanks,[Default]), UsedName(rank,[Default]), UsedName(perfectlySorted,[Default]), UsedName(perfectSortWithRanks$default$3,[Default]), UsedName(computeRanking,[Default]), UsedName(minimal_algorithms;group_by;MinimalGroupBy;init;,[Default]), UsedName(computeItemsCntByPartition,[Default]), UsedName(teraSort,[Default]), UsedName(execute,[Default]), UsedName(perfectlySortedWithRanks,[Default]), UsedName(groupBy,[Default]), UsedName(getPartitionSizes,[Default]), UsedName(MinimalGroupBy,[Default]), UsedName(itemsCntByPartition,[Default]), UsedName(teraSorted,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.group_by.MinimalGroupBy)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(minimal_algorithms.examples.group_by.ExampleGroupBy, minimal_algorithms.examples.group_by.InputObject)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.statistics_aggregators.SumAggregator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.statistics_aggregators.SumAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.statistics_aggregators.SumAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.statistics_aggregators.SumAggregator,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(merge,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getValue,[Default]), UsedName(SumAggregator,[Default]), UsedName(!=,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(minimal_algorithms;statistics_aggregators;SumAggregator;init;,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.statistics_aggregators.SumAggregator has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(merge,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getValue,[Default]), UsedName(SumAggregator,[Default]), UsedName(!=,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(minimal_algorithms;statistics_aggregators;SumAggregator;init;,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.statistics_aggregators.SumAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.group_by.GroupByObject...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.group_by.GroupByObject)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.group_by.GroupByObject)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.group_by.GroupByObject,ModifiedNames(changes = UsedName(getAggregator,[Default]), UsedName(getKey,[Default]), UsedName(minimal_algorithms;group_by;GroupByObject;init;,[Default]), UsedName(GroupByObject,[Default]), UsedName(compareTo,[Default]))) invalidates 1 classes due to The minimal_algorithms.group_by.GroupByObject has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getAggregator,[Default]), UsedName(getKey,[Default]), UsedName(minimal_algorithms;group_by;GroupByObject;init;,[Default]), UsedName(GroupByObject,[Default]), UsedName(compareTo,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.group_by.GroupByObject)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.ranking.RankingComparator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.ranking.RankingComparator)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.ranking.RankingComparator)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.ranking.ExampleRanking: Set(UsedName(RankingComparator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.ranking.ExampleRankingUsingPrefixSum: Set(UsedName(minimal_algorithms;examples;ranking;RankingComparator;init;,[Default]), UsedName(getWeight,[Default]), UsedName(RankingComparator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.ranking.RankingComparator,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(minimal_algorithms;examples;ranking;RankingComparator;init;,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(RankingComparator,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 3 classes due to The minimal_algorithms.examples.ranking.RankingComparator has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(minimal_algorithms;examples;ranking;RankingComparator;init;,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(RankingComparator,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.ranking.RankingComparator)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(minimal_algorithms.examples.ranking.ExampleRanking, minimal_algorithms.examples.ranking.ExampleRankingUsingPrefixSum)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.semi_join.SemiJoinKey...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.semi_join.SemiJoinKey)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.semi_join.SemiJoinKey)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.semi_join.ExampleSemiJoin: Set(UsedName(SemiJoinKey,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.semi_join.SemiJoinKey,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(minimal_algorithms;examples;semi_join;SemiJoinKey;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(SemiJoinKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 2 classes due to The minimal_algorithms.examples.semi_join.SemiJoinKey has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(minimal_algorithms;examples;semi_join;SemiJoinKey;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(SemiJoinKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.semi_join.SemiJoinKey)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(minimal_algorithms.examples.semi_join.ExampleSemiJoin)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.ranking.RankingObject...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.ranking.RankingObject)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.ranking.RankingObject)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.ranking.ExampleRanking: Set(UsedName(minimal_algorithms;examples;ranking;RankingObject;init;,[Default]), UsedName(RankingObject,[Default]), UsedName(cmpKey,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.ranking.ExampleRankingUsingPrefixSum: Set(UsedName(minimal_algorithms;examples;ranking;RankingObject;init;,[Default]), UsedName(getWeight,[Default]), UsedName(RankingObject,[Default]), UsedName(cmpKey,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.ranking.RankingObject,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(minimal_algorithms;examples;ranking;RankingObject;init;,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(RankingObject,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(cmpKey,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 3 classes due to The minimal_algorithms.examples.ranking.RankingObject has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(minimal_algorithms;examples;ranking;RankingObject;init;,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(RankingObject,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(cmpKey,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.ranking.RankingObject)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(minimal_algorithms.examples.ranking.ExampleRanking, minimal_algorithms.examples.ranking.ExampleRankingUsingPrefixSum)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.prefix.InputObject...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.prefix.InputObject)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.prefix.InputObject)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.prefix.InputObject,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(minimal_algorithms;examples;prefix;InputObject;init;,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(InputObject,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.examples.prefix.InputObject has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(minimal_algorithms;examples;prefix;InputObject;init;,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(InputObject,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.prefix.InputObject)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.sliding_aggregation.AvgSlidingSMAO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.sliding_aggregation.AvgSlidingSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.sliding_aggregation.AvgSlidingSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.sliding_aggregation.AvgSlidingSMAO,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(getAggregator,[Default]), UsedName(minimal_algorithms;examples;sliding_aggregation;AvgSlidingSMAO;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(AvgSlidingSMAO,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.examples.sliding_aggregation.AvgSlidingSMAO has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(getAggregator,[Default]), UsedName(minimal_algorithms;examples;sliding_aggregation;AvgSlidingSMAO;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(AvgSlidingSMAO,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.sliding_aggregation.AvgSlidingSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.MinimalAlgorithm...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.MinimalAlgorithm)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding minimal_algorithms.sliding_aggregation.MinimalSlidingAggregation by minimal_algorithms.MinimalAlgorithm[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding minimal_algorithms.MinimalSemiJoin by minimal_algorithms.MinimalAlgorithm[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding minimal_algorithms.group_by.MinimalGroupBy by minimal_algorithms.MinimalAlgorithm[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.sliding_aggregation.MinimalSlidingAggregation, minimal_algorithms.MinimalAlgorithm, minimal_algorithms.group_by.MinimalGroupBy, minimal_algorithms.MinimalSemiJoin)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of minimal_algorithms.examples.sliding_aggregation.InputObject. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of minimal_algorithms.examples.sliding_aggregation.ExampleSlidingAggregation. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.sliding_aggregation.MinimalSlidingAggregation: Set(UsedName(sendToMachines,[Default]), UsedName(minimal_algorithms;MinimalAlgorithm;init;,[Default]), UsedName(MinimalAlgorithm,[Default]), UsedName(perfectSortWithRanks,[Default]), UsedName(rank,[Default]), UsedName(computeItemsCntByPartition,[Default]), UsedName(itemsCntByPartition,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.group_by.MinimalGroupBy: Set(UsedName(perfectSort,[Default]), UsedName(sendToMachines,[Default]), UsedName(minimal_algorithms;MinimalAlgorithm;init;,[Default]), UsedName(MinimalAlgorithm,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.ranking.ExampleRanking: Set(UsedName(minimal_algorithms;MinimalAlgorithm;init;,[Default]), UsedName(MinimalAlgorithm,[Default]), UsedName(rank,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.MinimalSemiJoin: Set(UsedName(perfectSort,[Default]), UsedName(minimal_algorithms;MinimalAlgorithm;init;,[Default]), UsedName(MinimalAlgorithm,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.semi_join.ExampleSemiJoin: Set(UsedName(perfectSort$default$3,[Default]), UsedName(perfectSort,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.group_by.ExampleGroupBy: Set(UsedName(perfectSort$default$3,[Default]), UsedName(perfectSort,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.ranking.ExampleRankingUsingPrefixSum: Set(UsedName(minimal_algorithms;MinimalAlgorithm;init;,[Default]), UsedName(prefix,[Default]), UsedName(MinimalAlgorithm,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.prefix.InputObject: Set(UsedName(prefix,[Default]), UsedName(MinimalAlgorithm,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.prefix.ExamplePrefix: Set(UsedName(minimal_algorithms;MinimalAlgorithm;init;,[Default]), UsedName(prefix,[Default]), UsedName(MinimalAlgorithm,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.group_by.ExampleGroupBy: Set(UsedName(perfectSort$default$3,[Default]), UsedName(perfectSort,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of minimal_algorithms.examples.group_by.InputObject. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.semi_join.ExampleSemiJoin: Set(UsedName(perfectSort$default$3,[Default]), UsedName(perfectSort,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.MinimalAlgorithm,ModifiedNames(changes = UsedName(importObjects,[Default]), UsedName(perfectSort$default$3,[Default]), UsedName(perfectSort,[Default]), UsedName(sendToMachines,[Default]), UsedName(minimal_algorithms;MinimalAlgorithm;init;,[Default]), UsedName(prefix,[Default]), UsedName(computeItemsCntByPartition$default$2,[Default]), UsedName(MinimalAlgorithm,[Default]), UsedName(objects,[Default]), UsedName(perfectSortWithRanks,[Default]), UsedName(rank,[Default]), UsedName(perfectlySorted,[Default]), UsedName(perfectSortWithRanks$default$3,[Default]), UsedName(computeRanking,[Default]), UsedName(computeItemsCntByPartition,[Default]), UsedName(teraSort,[Default]), UsedName(perfectlySortedWithRanks,[Default]), UsedName(getPartitionSizes,[Default]), UsedName(itemsCntByPartition,[Default]), UsedName(teraSorted,[Default]))) invalidates 10 classes due to The minimal_algorithms.MinimalAlgorithm has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(importObjects,[Default]), UsedName(perfectSort$default$3,[Default]), UsedName(perfectSort,[Default]), UsedName(sendToMachines,[Default]), UsedName(minimal_algorithms;MinimalAlgorithm;init;,[Default]), UsedName(prefix,[Default]), UsedName(computeItemsCntByPartition$default$2,[Default]), UsedName(MinimalAlgorithm,[Default]), UsedName(objects,[Default]), UsedName(perfectSortWithRanks,[Default]), UsedName(rank,[Default]), UsedName(perfectlySorted,[Default]), UsedName(perfectSortWithRanks$default$3,[Default]), UsedName(computeRanking,[Default]), UsedName(computeItemsCntByPartition,[Default]), UsedName(teraSort,[Default]), UsedName(perfectlySortedWithRanks,[Default]), UsedName(getPartitionSizes,[Default]), UsedName(itemsCntByPartition,[Default]), UsedName(teraSorted,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.sliding_aggregation.MinimalSlidingAggregation, minimal_algorithms.MinimalAlgorithm, minimal_algorithms.group_by.MinimalGroupBy, minimal_algorithms.MinimalSemiJoin)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(minimal_algorithms.sliding_aggregation.MinimalSlidingAggregation, minimal_algorithms.group_by.MinimalGroupBy, minimal_algorithms.examples.ranking.ExampleRanking, minimal_algorithms.MinimalSemiJoin, minimal_algorithms.examples.semi_join.ExampleSemiJoin, minimal_algorithms.examples.group_by.ExampleGroupBy, minimal_algorithms.examples.ranking.ExampleRankingUsingPrefixSum, minimal_algorithms.examples.prefix.InputObject, minimal_algorithms.examples.prefix.ExamplePrefix)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.group_by.IntKey...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.group_by.IntKey)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.group_by.IntKey)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.group_by.IntKey,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(minimal_algorithms;examples;group_by;IntKey;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getValue,[Default]), UsedName(!=,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(IntKey,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.examples.group_by.IntKey has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(minimal_algorithms;examples;group_by;IntKey;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getValue,[Default]), UsedName(!=,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(IntKey,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.group_by.IntKey)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.prefix.PrefixSMAO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.prefix.PrefixSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.prefix.PrefixSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.prefix.PrefixSMAO,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(minimal_algorithms;examples;prefix;PrefixSMAO;init;,[Default]), UsedName(getAggregator,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(PrefixSMAO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.examples.prefix.PrefixSMAO has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(minimal_algorithms;examples;prefix;PrefixSMAO;init;,[Default]), UsedName(getAggregator,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(PrefixSMAO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compareTo,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.prefix.PrefixSMAO)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.Utils.KeyPartitioner...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.Utils.KeyPartitioner)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.Utils.KeyPartitioner)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.Utils.KeyPartitioner,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(KeyPartitioner,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.Utils.KeyPartitioner has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(KeyPartitioner,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.Utils.KeyPartitioner)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.group_by.InputObject...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.group_by.InputObject)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.group_by.InputObject)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.group_by.InputObject,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(minimal_algorithms;examples;group_by;InputObject;init;,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(InputObject,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.examples.group_by.InputObject has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(getKey,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(minimal_algorithms;examples;group_by;InputObject;init;,[Default]), UsedName(getWeight,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(InputObject,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.group_by.InputObject)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.examples.statistics_aggregators.SumAggregator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.statistics_aggregators.SumAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.examples.statistics_aggregators.SumAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.sliding_aggregation.ExampleSlidingAggregation: Set(UsedName(getValue,[Default]), UsedName(SumAggregator,[Default]), UsedName(minimal_algorithms;examples;statistics_aggregators;SumAggregator;init;,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.group_by.ExampleGroupBy: Set(UsedName(SumAggregator,[Default]), UsedName(minimal_algorithms;examples;statistics_aggregators;SumAggregator;init;,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.ranking.ExampleRankingUsingPrefixSum: Set(UsedName(SumAggregator,[Default]), UsedName(minimal_algorithms;examples;statistics_aggregators;SumAggregator;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.group_by.InputObject: Set(UsedName(SumAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.sliding_aggregation.InputObject: Set(UsedName(SumAggregator,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.prefix.InputObject: Set(UsedName(SumAggregator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of minimal_algorithms.examples.prefix.ExamplePrefix: Set(UsedName(SumAggregator,[Default]), UsedName(minimal_algorithms;examples;statistics_aggregators;SumAggregator;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.examples.statistics_aggregators.SumAggregator,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(merge,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getValue,[Default]), UsedName(SumAggregator,[Default]), UsedName(!=,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(minimal_algorithms;examples;statistics_aggregators;SumAggregator;init;,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 8 classes due to The minimal_algorithms.examples.statistics_aggregators.SumAggregator has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(merge,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getValue,[Default]), UsedName(SumAggregator,[Default]), UsedName(!=,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(minimal_algorithms;examples;statistics_aggregators;SumAggregator;init;,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.examples.statistics_aggregators.SumAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(minimal_algorithms.examples.sliding_aggregation.ExampleSlidingAggregation, minimal_algorithms.examples.group_by.ExampleGroupBy, minimal_algorithms.examples.ranking.ExampleRankingUsingPrefixSum, minimal_algorithms.examples.group_by.InputObject, minimal_algorithms.examples.sliding_aggregation.InputObject, minimal_algorithms.examples.prefix.InputObject, minimal_algorithms.examples.prefix.ExamplePrefix)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from minimal_algorithms.statistics_aggregators.MaxAggregator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.statistics_aggregators.MaxAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(minimal_algorithms.statistics_aggregators.MaxAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(minimal_algorithms.statistics_aggregators.MaxAggregator,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(merge,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getValue,[Default]), UsedName(MaxAggregator,[Default]), UsedName(!=,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(minimal_algorithms;statistics_aggregators;MaxAggregator;init;,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The minimal_algorithms.statistics_aggregators.MaxAggregator has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(merge,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getValue,[Default]), UsedName(MaxAggregator,[Default]), UsedName(!=,[Default]), UsedName(canEqual,[Default]), UsedName(synchronized,[Default]), UsedName(minimal_algorithms;statistics_aggregators;MaxAggregator;init;,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(minimal_algorithms.statistics_aggregators.MaxAggregator)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set(minimal_algorithms.examples.sliding_aggregation.ExampleSlidingAggregation, minimal_algorithms.examples.ranking.ExampleRanking, minimal_algorithms.examples.semi_join.ExampleSemiJoin, minimal_algorithms.examples.ranking.ExampleRankingUsingPrefixSum, minimal_algorithms.examples.prefix.ExamplePrefix)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(minimal_algorithms.examples.sliding_aggregation.ExampleSlidingAggregation, minimal_algorithms.examples.ranking.ExampleRanking, minimal_algorithms.examples.semi_join.ExampleSemiJoin, minimal_algorithms.examples.ranking.ExampleRankingUsingPrefixSum, minimal_algorithms.examples.prefix.ExamplePrefix)[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
