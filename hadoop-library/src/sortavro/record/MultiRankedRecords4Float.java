/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package sortavro.record;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MultiRankedRecords4Float extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6703748863018909147L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MultiRankedRecords4Float\",\"namespace\":\"sortavro.record\",\"fields\":[{\"name\":\"arrayOfRankedRecords\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"RankedRecords4Float\",\"fields\":[{\"name\":\"ranking\",\"type\":\"int\"},{\"name\":\"value\",\"type\":{\"type\":\"record\",\"name\":\"Record4Float\",\"fields\":[{\"name\":\"first\",\"type\":\"float\"},{\"name\":\"second\",\"type\":\"float\"},{\"name\":\"third\",\"type\":\"float\"},{\"name\":\"fourth\",\"type\":\"float\"}]}}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<sortavro.record.RankedRecords4Float> arrayOfRankedRecords;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MultiRankedRecords4Float() {}

  /**
   * All-args constructor.
   * @param arrayOfRankedRecords The new value for arrayOfRankedRecords
   */
  public MultiRankedRecords4Float(java.util.List<sortavro.record.RankedRecords4Float> arrayOfRankedRecords) {
    this.arrayOfRankedRecords = arrayOfRankedRecords;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return arrayOfRankedRecords;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: arrayOfRankedRecords = (java.util.List<sortavro.record.RankedRecords4Float>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'arrayOfRankedRecords' field.
   * @return The value of the 'arrayOfRankedRecords' field.
   */
  public java.util.List<sortavro.record.RankedRecords4Float> getArrayOfRankedRecords() {
    return arrayOfRankedRecords;
  }

  /**
   * Sets the value of the 'arrayOfRankedRecords' field.
   * @param value the value to set.
   */
  public void setArrayOfRankedRecords(java.util.List<sortavro.record.RankedRecords4Float> value) {
    this.arrayOfRankedRecords = value;
  }

  /**
   * Creates a new MultiRankedRecords4Float RecordBuilder.
   * @return A new MultiRankedRecords4Float RecordBuilder
   */
  public static sortavro.record.MultiRankedRecords4Float.Builder newBuilder() {
    return new sortavro.record.MultiRankedRecords4Float.Builder();
  }

  /**
   * Creates a new MultiRankedRecords4Float RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MultiRankedRecords4Float RecordBuilder
   */
  public static sortavro.record.MultiRankedRecords4Float.Builder newBuilder(sortavro.record.MultiRankedRecords4Float.Builder other) {
    return new sortavro.record.MultiRankedRecords4Float.Builder(other);
  }

  /**
   * Creates a new MultiRankedRecords4Float RecordBuilder by copying an existing MultiRankedRecords4Float instance.
   * @param other The existing instance to copy.
   * @return A new MultiRankedRecords4Float RecordBuilder
   */
  public static sortavro.record.MultiRankedRecords4Float.Builder newBuilder(sortavro.record.MultiRankedRecords4Float other) {
    return new sortavro.record.MultiRankedRecords4Float.Builder(other);
  }

  /**
   * RecordBuilder for MultiRankedRecords4Float instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MultiRankedRecords4Float>
    implements org.apache.avro.data.RecordBuilder<MultiRankedRecords4Float> {

    private java.util.List<sortavro.record.RankedRecords4Float> arrayOfRankedRecords;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(sortavro.record.MultiRankedRecords4Float.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.arrayOfRankedRecords)) {
        this.arrayOfRankedRecords = data().deepCopy(fields()[0].schema(), other.arrayOfRankedRecords);
        fieldSetFlags()[0] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing MultiRankedRecords4Float instance
     * @param other The existing instance to copy.
     */
    private Builder(sortavro.record.MultiRankedRecords4Float other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.arrayOfRankedRecords)) {
        this.arrayOfRankedRecords = data().deepCopy(fields()[0].schema(), other.arrayOfRankedRecords);
        fieldSetFlags()[0] = true;
      }
    }

    /**
      * Gets the value of the 'arrayOfRankedRecords' field.
      * @return The value.
      */
    public java.util.List<sortavro.record.RankedRecords4Float> getArrayOfRankedRecords() {
      return arrayOfRankedRecords;
    }

    /**
      * Sets the value of the 'arrayOfRankedRecords' field.
      * @param value The value of 'arrayOfRankedRecords'.
      * @return This builder.
      */
    public sortavro.record.MultiRankedRecords4Float.Builder setArrayOfRankedRecords(java.util.List<sortavro.record.RankedRecords4Float> value) {
      validate(fields()[0], value);
      this.arrayOfRankedRecords = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'arrayOfRankedRecords' field has been set.
      * @return True if the 'arrayOfRankedRecords' field has been set, false otherwise.
      */
    public boolean hasArrayOfRankedRecords() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'arrayOfRankedRecords' field.
      * @return This builder.
      */
    public sortavro.record.MultiRankedRecords4Float.Builder clearArrayOfRankedRecords() {
      arrayOfRankedRecords = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public MultiRankedRecords4Float build() {
      try {
        MultiRankedRecords4Float record = new MultiRankedRecords4Float();
        record.arrayOfRankedRecords = fieldSetFlags()[0] ? this.arrayOfRankedRecords : (java.util.List<sortavro.record.RankedRecords4Float>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
